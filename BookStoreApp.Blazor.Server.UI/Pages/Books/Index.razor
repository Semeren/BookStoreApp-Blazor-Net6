@page "/books/"
@inject IBookService bookService
@inject IJSRuntime js

<h3>Books</h3>


@if(response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
else
{
    @if(books == null)
    {
        <div class="alert alert-info">
            <h4>Loading Data...</h4>
        </div>
    }
    else
    {
        <AuthorizeView Roles="Administrator">
            <a class="btn btn-primary" href="/books/create"><span class="oi oi-plus" aria-hidden="true"></span> Create</a>
         </AuthorizeView>
        <br/>
        <table class="table table-responsive">
            <thead>
                <tr>                
                    <th scope="col"></th>
                    <th scope="col">Title</th>
                    <th scope="col">Price</th>
                    <th scope="col">Author Name</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var book in books)
                {
                    <tr>
                        <td>
                            <img src="@book.Image" width="100" height="100" alt ="@book.Title" />
                        </td>
                        <td>@book.Title</td>
                        <td>@book.Price.ToString("C")</td>
                        <td><a class="btn btn-link" href="/authors/details/@book.AuthorId">@book.AuthorName</a></td>
                        <td>
                            <a class="btn btn-primary" href="/books/details/@book.Id"><span class="oi oi-book" aria-hidden="true"></span> Details</a>
                            <AuthorizeView Roles="Administrator">
                                <a class="btn btn-warning" href="/books/update/@book.Id"><span class="oi oi-pencil" aria-hidden="true"></span> Edit</a>
                                <button class="btn btn-danger" @onclick=@(() => Delete(@book.Id)) href="/books/delete"><span class="oi oi-delete" aria-hidden="true"></span> Delete</button>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}


@code {
    private List<BookReadOnlyDto> books;
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>>{Success = true};

    protected override async Task OnInitializedAsync()
    {
        response  = await bookService.GetAll();
        if (response.Success)
        {
            books = response.Data;
        }
    }

    private async Task Delete(int bookId)
    {
        var book = books.First(q => q.Id == bookId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete {book.Title}?");
        if (confirm)
        {
            var response = await bookService.Delete(bookId);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }

    }
}
